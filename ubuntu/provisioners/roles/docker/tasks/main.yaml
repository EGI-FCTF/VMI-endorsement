- name: install requirements
  apt:
    name:
    - apt-transport-https
    - ca-certificates
    - curl
    - software-properties-common
    - apparmor
    # this is to make the nfs-based volumes work
    - nfs-common
    state: latest

- name: add Docker repo key
  apt_key: url="https://download.docker.com/linux/debian/gpg"

- name: add docker repo
  apt_repository:
    repo: 'deb [arch=amd64] https://download.docker.com/linux/ubuntu {{ansible_distribution_release}} stable'
    state: present
    update_cache: yes

- name: Install docker {{ docker_version }}
  apt:
    name:
    - "docker-ce={{ docker_version }}"
    - containerd.io=1.2.13-2
    - "docker-ce-cli={{ docker_version }}"
    state: present

- name: Configure overlay2
  copy:
    dest: /etc/docker/daemon.json
    src: daemon.json

- name: Get docker-compose {{ docker_compose_version }}
  get_url:
    url: "https://github.com/docker/compose/releases/download/{{ docker_compose_version }}/docker-compose-{{ ansible_system }}-{{ ansible_machine }}"
    dest: /usr/local/bin/docker-compose
    mode: 0755

- name: Add repo key
  apt_key:
    url: "https://packages.cloud.google.com/apt/doc/apt-key.gpg"
    state: present
  when: docker_install_kubeadm

- name: Add kubernetes repo
  apt_repository: repo='deb http://apt.kubernetes.io/ kubernetes-xenial main' state=present update_cache=yes
  when: docker_install_kubeadm

- name: Install kubernetes packages
  apt:
    name:
    - "kubelet={{ kube_version }}"
    - "kubeadm={{ kube_version }}"
    - "kubectl={{ kube_version }}"
    state: present
  when: docker_install_kubeadm
