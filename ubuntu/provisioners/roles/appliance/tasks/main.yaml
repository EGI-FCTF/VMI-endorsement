- name: Create appliance directories
  file:
    path: "{{ item }}"
    state: directory
  with_items:
    - "/etc/cloudkeeper"
    - "/etc/cloudkeeper-os"
    - "/etc/apel"
    - "/etc/caso"
    - "/etc/cloud-info-provider"
    - "/etc/sitebdii"
    - "/var/spool/caso"
    - "/var/spool/apel"
    - "/image_data"

- name: Appliance configuration files
  get_url:
    url: "{{ base_url }}/{{ item.src }}"
    dest: "{{ item.dest }}"
  with_items:
    - src: "cloudkeeper/os/cloudkeeper-os.conf"
      dest: "/etc/cloudkeeper-os/cloudkeeper-os.conf"
    - src: "cloudkeeper/os/voms.json"
      dest: "/etc/cloudkeeper-os/voms.json"
    - src: "cloudkeeper/core/image-lists.conf"
      dest: "/etc/cloudkeeper/image-lists.conf"
    - src: "cloudkeeper/core/cloudkeeper.yml"
      dest: "/etc/cloudkeeper"
    - src: "accounting/caso/voms.json"
      dest: "/etc/caso/voms.json"
    - src: "accounting/caso/caso.conf"
      dest: "/etc/caso/caso.conf"
    - src: "accounting/ssm/logging.cfg"
      dest: "/etc/apel/logging.cfg"
    - src: "accounting/ssm/sender.cfg"
      dest: "/etc/apel/sender.cfg"
    - src: "cloud-info/cloud/openstack.rc"
      dest: "/etc/cloud-info-provider/openstack.rc"
    - src: "cloud-info/cloud/openstack.yaml"
      dest: "/etc/cloud-info-provider/openstack.yaml"
    - src: "cloud-info/site/site.cfg"
      dest: "/etc/sitebdii/site.cfg"
    - src: "cloud-info/site/glite-info-site-defaults.conf"
      dest: "/etc/sitebdii/glite-info-site-defaults.conf"


- name: Cloudkeeper-os service file
  copy:
    dest: /etc/systemd/system/cloudkeeper-os.service
    content: |
      #
      # This manages the cloudkeeper OS backend
      #
      [Unit]
      Description=CloudKeeper Service
      After=docker.service
      Requires=docker.service

      [Service]
      ExecStartPre=-/usr/bin/docker stop cloudkeeper-os
      ExecStartPre=-/usr/bin/docker rm -v cloudkeeper-os
      ExecStart=/usr/bin/docker run --name cloudkeeper-os -v /etc/cloudkeeper-os/cloudkeeper-os.conf:/etc/cloudkeeper-os/cloudkeeper-os.conf -v /etc/cloudkeeper-os/voms.json:/etc/cloudkeeper-os/voms.json -v /image_data:/var/spool/cloudkeeper/images egifedcloud/cloudkeeper-os:{{ appliance_tagÂ }}
      ExecStop=/usr/bin/docker stop cloudkeeper-os

      [Install]
      WantedBy=multi-user.target

- name: BDII service file
  copy:
    dest: /etc/systemd/system/bdii.service
    content: |
      #
      # This manages the docker-compose for BDII
      #
      [Unit]
      Description=BDII Service
      After=docker.service
      Requires=docker.service

      [Service]
      ExecStartPre=/usr/local/bin/docker-compose -f /etc/sitebdii/docker-compose.yml rm -v -f -s
      ExecStart=/usr/local/bin/docker-compose -f /etc/sitebdii/docker-compose.yml up
      ExecStop=/usr/local/bin/docker-compose -f /etc/sitebdii/docker-compose.yml stop

      [Install]
      WantedBy=multi-user.target

- name: cloudkeeper cron entry
  cron:
    name: cloudkeeper
    hour: "*/4"
    minute: 26
    job: "/usr/local/bin/cloudkeeper.sh >> /var/log/cloudkeeper.log 2>&1"

- name: SSM cron entry
  cron:
    name: ssm
    hour: "*/6"
    minute: 30
    job: "/usr/local/bin/ssm-send.sh >> /var/log/ssm.log 2>&1"

- name: caso cron entry
  cron:
    name: caso
    hour: "*/4"
    minute: 14
    job: "/usr/local/bin/caso-extract.sh >> /var/log/caso.log 2>&1"

- name: Cloudkeeper helper script
  copy:
    dest: /usr/local/bin/cloudkeeper.sh
    mode: 0755
    content: |
      #!/bin/sh

      docker run -v /etc/grid-security:/etc/grid-security \
                 -v /etc/cloudkeeper:/etc/cloudkeeper \
                 -v /image_data:/var/spool/cloudkeeper/images \
                 --link cloudkeeper-os:backend \
                 --rm egifedcloud/cloudkeeper:{{ appliance_tag}} cloudkeeper sync --debug

- name: SSM helper script
  copy:
    dest: /usr/local/bin/ssm-send.sh
    mode: 0755
    content: |
      #!/bin/sh

      docker run -v /etc/grid-security:/etc/grid-security \
                 -v /var/spool/apel:/var/spool/apel \
                 --rm stfc/ssm:{{ ssm_tag }} ssmsend

- name: cASO helper script
  copy:
    dest: /usr/local/bin/caso-extract.sh
    mode: 0755
    content: |
      #!/bin/sh

      docker run -v /etc/caso/voms.json:/etc/caso/voms.json \
                 -v /etc/caso/caso.conf:/etc/caso/caso.conf \
                 -v /var/spool/caso:/var/spool/caso \
                 -v /var/spool/apel:/var/spool/apel \
                 --rm egifedcloud/caso:{{ appliance_tag }}

- name: BDII docker compose file
  copy:
    dest: /etc/sitebdii/docker-compose.yml
    content: |
      version: "2"
      services:
        cloudbdii:
          image: egifedcloud/cloudbdii:{{ appliance_tag }}
          volumes:
           - /etc/cloud-info-provider/openstack.rc:/etc/cloud-info-provider/openstack.rc
           - /etc/cloud-info-provider/openstack.yaml:/etc/cloud-info-provider/openstack.yaml
        sitebdii:
          image: egifedcloud/sitebdii:{{ appliance_tag }}
          volumes:
           - /etc/sitebdii/site.cfg:/etc/glite-info-static/site/site.cfg
           - /etc/sitebdii/glite-info-site-defaults.conf:/etc/bdii/gip/glite-info-site-defaults.conf
          links:
           - cloudbdii
          ports:
           - "2170:2170"

- name: Enable services
  systemd:
    name: "{{ item }}"
    enabled: yes
  with_items:
    - bdii
    - cloudkeeper-os

- name: add CAs repo key
  apt_key: url="https://dist.eugridpma.info/distribution/igtf/current/GPG-KEY-EUGridPMA-RPM-3"

- name: add CAs repo
  apt_repository:
    repo: 'deb http://repository.egi.eu/sw/production/cas/1/current egi-igtf core'
    state: present
    update_cache: yes

- name: Install CAs and fetch-crl
  apt:
    name: ["ca-policy-egi-core", "fetch-crl"]
    state: present

#  - name: pull docker images
#    command: docker pull "{{ item }}"
#    with_items:
#      - "egifedcloud/cloudkeeper:{{ appliance_tag}}"
#      - "egifedcloud/cloudkeeper-os:{{ appliance_tag}}"
#      - "egifedcloud/bdii:{{ appliance_tag}}"
#      - "egifedcloud/sitebdii:{{ appliance_tag}}"
#      - "egifedcloud/cloudbdii:{{ appliance_tag}}"
#      - "egifedcloud/caso:{{ appliance_tag}}"
#      - "stfc/ssm:{{ ssm_tag }}"
